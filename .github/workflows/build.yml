name: Build
on:
  push:
    paths-ignore:
      - '**.md'
    branches:
      - master
  pull_request:
    paths-ignore:
      - '**.md'
    branches:
      - master
  workflow_call:
  workflow_dispatch:

env:
  RPI_FIRMWARE_URL: https://github.com/raspberrypi/firmware/
  DTB_VERSION: master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        MODEL:
          - 5
        CONFIGURATION: [Debug, Release]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Init submodules individually
        shell: bash
        run: |
         git submodule update --init  # Initializes submodules in the root .gitmodules
         cd edk2 && git submodule update --init || true
         cd ../edk2-platforms && git submodule update --init || true

      - name: Install dependencies
        shell: bash
        run: |
          sudo apt-get update && \
          sudo apt-get install -y \
          acpica-tools \
          binutils-aarch64-linux-gnu \
          build-essential \
          device-tree-compiler \
          gettext \
          git \
          gcc-aarch64-linux-gnu \
          iasl \
          libc6-dev-arm64-cross \
          python3 \
          python3-pyelftools

      - name: Get version tag
        id: get_version_tag
        shell: bash
        run: echo "version=$(git describe --tags --always)" >> $GITHUB_OUTPUT

      - name: Set up Secure Boot default keys
        run: |
          mkdir keys
          # We don't really need a usable PK, so just generate a public key for it and discard the private key
          openssl req -new -x509 -newkey rsa:2048 -subj "/CN=Raspberry Pi Platform Key/" -keyout /dev/null -outform DER -out keys/pk.cer -days 7300 -nodes -sha256
          curl -L https://go.microsoft.com/fwlink/?LinkId=321185 -o keys/ms_kek1.cer
          curl -L https://go.microsoft.com/fwlink/?linkid=2239775 -o keys/ms_kek2.cer
          curl -L https://go.microsoft.com/fwlink/?linkid=321192 -o keys/ms_db1.cer
          curl -L https://go.microsoft.com/fwlink/?linkid=321194 -o keys/ms_db2.cer
          curl -L https://go.microsoft.com/fwlink/?linkid=2239776 -o keys/ms_db3.cer
          curl -L https://go.microsoft.com/fwlink/?linkid=2239872 -o keys/ms_db4.cer
          curl -L https://github.com/microsoft/secureboot_objects/tree/main/PostSignedObjects/DBX/arm64/DBXUpdate.bin -o keys/arm64_dbx.bin

      - name: Build platform
        shell: bash
        run: |
          export EDK2_SECUREBOOT_FLAGS=""
          if [ -d keys ]; then
            export EDK2_SECUREBOOT_FLAGS=" \
               -D DEFAULT_KEYS=TRUE \
               -D PK_DEFAULT_FILE=keys/pk.cer \
               -D KEK_DEFAULT_FILE1=keys/ms_kek1.cer \
               -D KEK_DEFAULT_FILE1=keys/ms_kek2.cer \
               -D DB_DEFAULT_FILE1=keys/ms_db1.cer \
               -D DB_DEFAULT_FILE2=keys/ms_db2.cer \
               -D DB_DEFAULT_FILE1=keys/ms_db3.cer \
               -D DB_DEFAULT_FILE2=keys/ms_db4.cer \
               -D DBX_DEFAULT_FILE1=keys/arm64_dbx.bin \
               -D SECURE_BOOT_ENABLE=TRUE"
          fi

          export EDK2_BUILD_FLAGS=" \
              --pcd gEfiMdeModulePkgTokenSpaceGuid.PcdFirmwareVendor=L"${{ github.repository_owner }}" \
              ${EDK2_SECUREBOOT_FLAGS}"

          ./build.sh \
              --model ${{ matrix.MODEL }} \
              --debug ${{ matrix.CONFIGURATION == 'Debug' && 1 || 0 }} \
              --edk2-flags "${EDK2_BUILD_FLAGS}"

      - name: Download Raspberry Pi support files
        run: |
          curl -O -L ${{ env.RPI_FIRMWARE_URL }}/raw/${{ env.DTB_VERSION }}/boot/bcm2712-rpi-5-b.dtb
          curl -O -L ${{ env.RPI_FIRMWARE_URL }}/raw/${{ env.DTB_VERSION }}/boot/bcm2712-rpi-cm5-cm5io.dtb
          curl -O -L ${{ env.RPI_FIRMWARE_URL }}/raw/${{ env.DTB_VERSION }}/boot/bcm2712-rpi-cm5l-cm5io.dtb
          curl -O -L ${{ env.RPI_FIRMWARE_URL }}/raw/${{ env.DTB_VERSION }}/boot/bcm2712-rpi-500.dtb
          curl -O -L ${{ env.RPI_FIRMWARE_URL }}/raw/${{ env.DTB_VERSION }}/boot/overlays/bcm2712d0.dtbo

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: RPi${{ matrix.MODEL }}_UEFI_${{ matrix.CONFIGURATION }}_${{ steps.get_version_tag.outputs.version }}
          path: |
            RPI_EFI.fd
            config.txt
            *.dtb
            *.dtbo
          if-no-files-found: error
